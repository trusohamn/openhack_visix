{"version":3,"sources":["components/Legend2d.js","components/Tooltip.js","components/MapChart.js","components/Details.js","components/Stats.js","index.js"],"names":["SVG","r","g","b","style","fill","width","className","viewBox","fillFunction","rects","x","y","rect","height","key","push","xmlns","xmlnsXlink","id","refX","refY","markerWidth","markerHeight","orient","d","transform","points","stroke","strokeWidth","markerStart","markerEnd","fontSize","textAnchor","fontWeight","COLORS1","COLORS2","DataTooltip","Math","PI","name","corruption","investment","data_corruption","value","data_investment","console","log","display","justifyContent","flexDirection","data","cx","cy","innerRadius","outerRadius","paddingAngle","isAnimationActive","map","entry","index","length","dy","Number","toFixed","colorScale2D","color","G","B","R","rgbHex","MapChart","setTooltipContent","dataset","setCountry","country","setData","useEffect","csv","process","then","maxFunding","max","forEach","data-tip","projectionConfig","rotate","scale","disablePanning","geography","geographies","geo","find","s","properties","ISO_A3","rsmKey","onClick","onMouseEnter","Tooltip","NAME","onMouseLeave","default","outline","hover","pressed","coordinates","Legend2d","mostCorrupted","sort","c1","c2","slice","mostInvested","lessInvested","upperFirst","string","charAt","toUpperCase","substring","rootElement","document","getElementById","ReactDOM","render","useState","content","setContent","setKey","Tabs","activeKey","onSelect","k","sector","Tab","eventKey","title","Stats","Details"],"mappings":"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","file":"static/js/main.8ac984b1.chunk.js","sourcesContent":["import React from \"react\";\n\nconst SVG = ({\n  style = {},\n  fill = \"#000\",\n  width = \"100%\",\n  className = \"\",\n  viewBox = \"0 0 10 6\",\n  fillFunction\n}) => {\n  // <div style={{ position: \"absolute\", top: \"60%\", left: \"0\" }}>\n\n  let rects = [];\n\n  const scale = 1;\n\n  const rgb = (r, g, b) => {\n    return `rgb(${r},${g},${b})`;\n  };\n\n  for (let x = 0; x < 5; x++) {\n    for (let y = 0; y < 5; y++) {\n      let rect = (\n        <rect\n          width={0.95 * scale}\n          height={0.95 * scale}\n          fill={\n            fillFunction\n              ? fillFunction(x / 4, 1 - y / 4)\n              : rgb(100 + (x / 4) * 155, 0, 255 - (y / 4) * 155)\n          }\n          x={x * scale}\n          y={y * scale}\n          key={`${y}x${x}`}\n        />\n      );\n      rects.push(rect);\n    }\n  }\n\n  return (\n    <svg\n      width={width}\n      style={style}\n      height={width}\n      viewBox={viewBox}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className={`svg-icon ${className || \"\"}`}\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n    >\n      <defs>\n        <marker\n          id=\"arrow\"\n          fill=\"white\"\n          viewBox=\"0 0 10 10\"\n          refX=\"5\"\n          refY=\"5\"\n          markerWidth=\"6\"\n          markerHeight=\"6\"\n          orient=\"auto-start-reverse\"\n        >\n          <path d=\"M 0 0 L 10 5 L 0 10 z\" />\n        </marker>\n      </defs>\n      <g id=\"group\" transform=\" rotate(-45 5 0)\">\n        <g>{rects}</g>\n        {/* <rect\n          width=\"0.95\"\n          height=\"0.95\"\n          fill=\"rgb(100,0,255)\"\n          x=\"0\"\n          y=\"0\"\n        ></rect>\n        <rect\n          width=\"0.95\"\n          height=\"0.95\"\n          fill=\"rgb(100,0,216.25)\"\n          x=\"0\"\n          y=\"1\"\n        ></rect>\n        <rect\n          width=\"0.95\"\n          height=\"0.95\"\n          fill=\"rgb(100,0,177.5)\"\n          x=\"0\"\n          y=\"2\"\n        ></rect>\n        <rect\n          width=\"0.95\"\n          height=\"0.95\"\n          fill=\"rgb(100,0,138.75)\"\n          x=\"0\"\n          y=\"3\"\n        ></rect>\n        <rect\n          width=\"0.95\"\n          height=\"0.95\"\n          fill=\"rgb(100,0,100)\"\n          x=\"0\"\n          y=\"4\"\n        ></rect>\n        <rect\n          width=\"0.95\"\n          height=\"0.95\"\n          fill=\"rgb(138.75,0,255)\"\n          x=\"1\"\n          y=\"0\"\n        ></rect>\n        <rect\n          width=\"0.95\"\n          height=\"0.95\"\n          fill=\"rgb(138.75,0,216.25)\"\n          x=\"1\"\n          y=\"1\"\n        ></rect>\n        <rect\n          width=\"0.95\"\n          height=\"0.95\"\n          fill=\"rgb(138.75,0,177.5)\"\n          x=\"1\"\n          y=\"2\"\n        ></rect>\n        <rect\n          width=\"0.95\"\n          height=\"0.95\"\n          fill=\"rgb(138.75,0,138.75)\"\n          x=\"1\"\n          y=\"3\"\n        ></rect>\n        <rect\n          width=\"0.95\"\n          height=\"0.95\"\n          fill=\"rgb(138.75,0,100)\"\n          x=\"1\"\n          y=\"4\"\n        ></rect>\n        <rect\n          width=\"0.95\"\n          height=\"0.95\"\n          fill=\"rgb(177.5,0,255)\"\n          x=\"2\"\n          y=\"0\"\n        ></rect>\n        <rect\n          width=\"0.95\"\n          height=\"0.95\"\n          fill=\"rgb(177.5,0,216.25)\"\n          x=\"2\"\n          y=\"1\"\n        ></rect>\n        <rect\n          width=\"0.95\"\n          height=\"0.95\"\n          fill=\"rgb(177.5,0,177.5)\"\n          x=\"2\"\n          y=\"2\"\n        ></rect>\n        <rect\n          width=\"0.95\"\n          height=\"0.95\"\n          fill=\"rgb(177.5,0,138.75)\"\n          x=\"2\"\n          y=\"3\"\n        ></rect>\n        <rect\n          width=\"0.95\"\n          height=\"0.95\"\n          fill=\"rgb(177.5,0,100)\"\n          x=\"2\"\n          y=\"4\"\n        ></rect>\n        <rect\n          width=\"0.95\"\n          height=\"0.95\"\n          fill=\"rgb(216.25,0,255)\"\n          x=\"3\"\n          y=\"0\"\n        ></rect>\n        <rect\n          width=\"0.95\"\n          height=\"0.95\"\n          fill=\"rgb(216.25,0,216.25)\"\n          x=\"3\"\n          y=\"1\"\n        ></rect>\n        <rect\n          width=\"0.95\"\n          height=\"0.95\"\n          fill=\"rgb(216.25,0,177.5)\"\n          x=\"3\"\n          y=\"2\"\n        ></rect>\n        <rect\n          width=\"0.95\"\n          height=\"0.95\"\n          fill=\"rgb(216.25,0,138.75)\"\n          x=\"3\"\n          y=\"3\"\n        ></rect>\n        <rect\n          width=\"0.95\"\n          height=\"0.95\"\n          fill=\"rgb(216.25,0,100)\"\n          x=\"3\"\n          y=\"4\"\n        ></rect>\n        <rect\n          width=\"0.95\"\n          height=\"0.95\"\n          fill=\"rgb(255,0,255)\"\n          x=\"4\"\n          y=\"0\"\n        ></rect>\n        <rect\n          width=\"0.95\"\n          height=\"0.95\"\n          fill=\"rgb(255,0,216.25)\"\n          x=\"4\"\n          y=\"1\"\n        ></rect>\n        <rect\n          width=\"0.95\"\n          height=\"0.95\"\n          fill=\"rgb(255,0,177.5)\"\n          x=\"4\"\n          y=\"2\"\n        ></rect>\n        <rect\n          width=\"0.95\"\n          height=\"0.95\"\n          fill=\"rgb(255,0,138.75)\"\n          x=\"4\"\n          y=\"3\"\n        ></rect>\n        <rect\n          width=\"0.95\"\n          height=\"0.95\"\n          fill=\"rgb(255,0,100)\"\n          x=\"4\"\n          y=\"4\"\n        ></rect> */}\n        <polyline\n          points=\"-0.2,-0.4, -0.2,5.1, 5.3,5.1\"\n          fill=\"none\"\n          stroke=\"white\"\n          strokeWidth=\"0.1\"\n          markerStart=\"url(#arrow)\"\n          markerEnd=\"url(#arrow)\"\n        />\n        <text\n          x=\"2.5\"\n          y=\"6\"\n          fontSize=\"0.06em\"\n          textAnchor=\"middle\"\n          fill=\"white\"\n          fontWeight=\"bold\"\n        >\n          Corruption\n        </text>\n        <text\n          transform=\" rotate(90 0 0)\"\n          fill=\"white\"\n          x=\"2.5\"\n          y=\"1\"\n          fontSize=\"0.06em\"\n          textAnchor=\"middle\"\n          fontWeight=\"bold\"\n        >\n          Investment\n        </text>\n      </g>\n    </svg>\n  );\n};\n\nexport default SVG;\n","import React, { ReactDOM } from \"react\";\nimport { PieChart, Pie, Sector, Cell } from \"recharts\";\n\nconst COLORS1 = [\"rgb(255,0,0)\", \"rgb(100,100,100)\"];\nconst COLORS2 = [\"rgb(0,0,255)\", \"rgb(100,100,100)\"];\n\nconst RADIAN = Math.PI / 180;\n\nconst DataTooltip = ({ name, corruption, investment }) => {\n  const data_corruption = [\n    { name: \"Group A\", value: corruption },\n    { name: \"inverse\", value: 1 - corruption }\n  ];\n\n  const data_investment = [\n    { name: \"Group A\", value: investment },\n    { name: \"inverse\", value: 1 - investment }\n  ];\n\n  console.log(data_corruption);\n\n  return (\n    <div\n      className=\"dataTooltip\"\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        flexDirection: \"column\"\n      }}\n    >\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>{name}</div>\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <PieChart width={100} height={50}>\n          <Pie\n            data={data_corruption}\n            cx={16}\n            cy={16}\n            innerRadius={15}\n            outerRadius={20}\n            paddingAngle={0}\n            isAnimationActive={false}\n          >\n            {data_corruption.map((entry, index) => (\n              <Cell fill={COLORS1[index % COLORS1.length]} stroke=\"black\" />\n            ))}\n          </Pie>\n          <text x={21} y={17} dy={8} textAnchor=\"middle\" fill=\"White\">\n            {Number(corruption).toFixed(2)}\n          </text>\n\n          <Pie\n            data={data_investment}\n            cx={56}\n            cy={16}\n            innerRadius={15}\n            outerRadius={20}\n            paddingAngle={0}\n            isAnimationActive={false}\n          >\n            {data_investment.map((entry, index) => (\n              <Cell fill={COLORS2[index % COLORS2.length]} stroke=\"black\" />\n            ))}\n          </Pie>\n          <text x={61} y={17} dy={8} textAnchor=\"middle\" fill=\"White\">\n            {Number(investment).toFixed(2)}\n          </text>\n        </PieChart>\n      </div>\n    </div>\n  );\n};\n\n//ReactDOM.render(<SimplePieChart />, document.getElementById(\"container\"));\n\nexport default DataTooltip;\n","import React, { useEffect, useState } from \"react\";\nimport { csv } from \"d3-fetch\";\n// import { scaleLinear } from \"d3-scale\";\nimport {\n  ZoomableGroup,\n  ComposableMap,\n  Geographies,\n  Geography,\n  Sphere,\n  Graticule,\n  Marker\n} from \"react-simple-maps\";\nimport rgbHex from \"rgb-hex\";\nimport Legend2d from \"./Legend2d\";\nimport Tooltip from \"./Tooltip\";\n\nconst geoUrl =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\n// const colorScale2D = (corruption, investment) => {\n//   console.log(100 + 155 * corruption, 0, 100 + 155 * investment);\n//   const hex = rgbHex(100 + 155 * corruption, 0, 100 + 155 * investment);\n//   return \"#\" + hex;\n// };\n\n// const fillFunction = (corruption, investment) => {\n//   console.log(\"in fillFunctin\", corruption, investment);\n//   return { R: 255 * corruption, G: 0, B: 255 * investment };\n// };\n\n// const fillFunction = (corruption, investment) => {\n//   return {\n//     R: 255 * Number(corruption),\n//     G: (155 * (Number(corruption) + Number(investment))) / 2 + 100,\n//     B: 255 * Number(investment)\n//   };\n// };\n\n// Nice white nothing, yellow corruption, blue investment, green both\n// const fillFunction = (corruption, investment) => {\n//   console.log(\"in fillFunctin\", corruption, investment);\n//   return {\n//     R: 255 - 255 * Number(investment),\n//     G: 255 - (155 * (Number(corruption) + Number(investment))) / 2,\n//     B: 255 - 255 * Number(corruption)\n//   };\n// };\n\n// Green investment, pink corruption, blue both <- best one so far\nconst fillFunction = (corruption, investment) => {\n  console.log(\"in fillFunctin\", corruption, investment);\n  return {\n    G: 255 - 255 * Number(corruption),\n    B: 255 - (155 * (Number(corruption) + Number(investment))) / 2,\n    R: 255 - 255 * Number(investment)\n  };\n};\n\n// Green investment, magenta corruption, red both\n// const fillFunction = (corruption, investment) => {\n//   console.log(\"in fillFunctin\", corruption, investment);\n//   return {\n//     B: 255 - 255 * Number(investment),\n//     R: 255 - (155 * (Number(corruption) + Number(investment))) / 2,\n//     G: 255 - 255 * Number(corruption)\n//   };\n// };\n\n// const fillFunction = (corruption, investment) => {\n//   console.log(\"in fillFunctin\", corruption, investment);\n//   return {\n//     G: 255 - 255 * Number(corruption),\n//     B: 255 - (55 * (Number(corruption) + Number(investment))) / 2,\n//     R: 255 - 255 * Number(investment)\n//   };\n// };\n\nconst colorScale2D = (corruption, investment) => {\n  const color = fillFunction(corruption, investment);\n\n  console.log(corruption, investment, color);\n  const hex = rgbHex(color[\"R\"], color[\"G\"], color[\"B\"]);\n  //const hex = rgbHex(255 * corruption, 255 * investment, 255);\n  //return \"#\" + hex;\n\n  return `rgb(${color[\"R\"]}, ${color[\"G\"]} , ${color[\"B\"]})`;\n};\n\nconst MapChart = ({\n  setTooltipContent,\n  dataset,\n  country,\n  setCountry,\n  data,\n  setData\n}) => {\n  useEffect(() => {\n    csv(`${process.env.PUBLIC_URL}/data/${dataset}`).then(data => {\n      const maxFunding = Math.max(\n        ...data.map(country => country[\"Funding USDm\"])\n      );\n      data.forEach(country => {\n        country.investment = country[\"Funding USDm\"] / maxFunding;\n      });\n      console.log(data);\n      return setData(data);\n    });\n  }, [dataset]);\n\n  return (\n    <div className=\"Map\">\n      <ComposableMap\n        data-tip=\"\"\n        height={400}\n        projectionConfig={{\n          rotate: [0, 0, 0],\n          scale: 140\n        }}\n      >\n        <ZoomableGroup disablePanning={true}>\n          <Sphere stroke=\"#E4E5E6\" strokeWidth={0.3} />\n          <Graticule stroke=\"#E4E5E6\" strokeWidth={0.3} />\n          {data.length > 0 && (\n            <Geographies geography={geoUrl}>\n              {({ geographies }) =>\n                geographies.map(geo => {\n                  const d = data.find(\n                    s => s[\"CountryCode\"] === geo.properties.ISO_A3\n                  );\n                  return (\n                    <Geography\n                      key={geo.rsmKey}\n                      geography={geo}\n                      fill={\n                        d\n                          ? colorScale2D(d[\"Corruption risks\"], d[\"investment\"])\n                          : \"#F5F4F6\"\n                      }\n                      stroke=\"#EAEAEC\"\n                      onClick={() => {\n                        setCountry(geo.properties.ISO_A3);\n                        console.log(geo.properties.ISO_A3);\n                      }}\n                      onMouseEnter={() => {\n                        setTooltipContent(\n                          <Tooltip\n                            name={geo.properties.NAME}\n                            corruption={\n                              d ? Number(d[\"Corruption risks\"]) : \"none\"\n                            }\n                            investment={d ? Number(d[\"investment\"]) : \"none\"}\n                          />\n                        );\n                      }}\n                      onMouseLeave={() => {\n                        setTooltipContent(\"\");\n                      }}\n                      style={{\n                        default: {\n                          outline: \"none\"\n                        },\n                        hover: {\n                          fill: \"#F53\",\n                          outline: \"none\"\n                        },\n                        pressed: {\n                          fill: \"#E42\",\n                          outline: \"none\"\n                        }\n                      }}\n                    />\n                  );\n                })\n              }\n            </Geographies>\n          )}\n          <Marker coordinates={[-150.006, -10.7128]}>\n            <Legend2d width={120} fillFunction={colorScale2D} />\n          </Marker>\n        </ZoomableGroup>\n      </ComposableMap>\n    </div>\n  );\n};\n\nexport default MapChart;\n","import React, { useEffect } from \"react\";\n\nexport default ({ country }) => {\n  useEffect(() => {\n    console.log(country);\n  }, [country]);\n\n  return (\n    <div className=\"content Details\">\n      <h3>{country}</h3>\n    </div>\n  );\n};\n","import React, { useEffect } from \"react\";\n\nexport default ({ data }) => {\n  const corruption = \"Corruption risks\";\n  const name = \"Country Name\";\n\n  const mostCorrupted = data\n    .sort((c1, c2) => (c1[corruption] <= c2[corruption] ? 1 : -1))\n    .slice(0, 5);\n  const mostInvested = data\n    .sort((c1, c2) => (c1.investment <= c2.investment ? 1 : -1))\n    .slice(0, 5);\n  const lessInvested = data\n    .sort((c1, c2) => (c1.investment >= c2.investment ? 1 : -1))\n    .slice(0, 5);\n  console.log(\"***********\", mostCorrupted);\n  return (\n    <div className=\"content Stats\">\n      most corrupted\n      <ul>\n        {mostCorrupted.map(country => (\n          <li>{country[name]}</li>\n        ))}\n      </ul>\n      most invested\n      <ul>\n        {mostInvested.map(country => (\n          <li>{country[name]}</li>\n        ))}\n      </ul>\n      least invested\n      <ul>\n        {lessInvested.map(country => (\n          <li>{country[name]}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ReactTooltip from \"react-tooltip\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./styles.css\";\nimport MapChart from \"./components/MapChart\";\nimport Details from \"./components/Details\";\nimport Stats from \"./components/Stats\";\n\nimport { Tabs, Tab } from \"react-bootstrap\";\nconst upperFirst = string =>\n  string.charAt(0).toUpperCase() + string.substring(1);\nfunction App() {\n  const [content, setContent] = useState(\"\");\n  const [key, setKey] = useState(\"public\");\n  const [country, setCountry] = useState(\"\");\n  const [data, setData] = useState([]);\n\n  const sectors = [\"public\", \"education\", \"health\", \"business\", \"energy\"];\n  return (\n    <div>\n      <div className=\"page\">\n        <div className=\"Tabs\">\n          <Tabs\n            id=\"controlled-tab-example\"\n            activeKey={key}\n            onSelect={k => setKey(k)}\n          >\n            {sectors.map(sector => (\n              <Tab\n                key={sector}\n                eventKey={sector}\n                title={upperFirst(sector)}\n              ></Tab>\n            ))}\n          </Tabs>\n        </div>\n        <MapChart\n          setTooltipContent={setContent}\n          dataset={key + \".csv\"}\n          country={country}\n          setCountry={setCountry}\n          data={data}\n          setData={setData}\n        />\n        <Stats country={country} data={data}></Stats>\n        <ReactTooltip>{content}</ReactTooltip>\n        <Details country={country} />\n      </div>\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}