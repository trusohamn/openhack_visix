{"version":3,"sources":["components/Legend2d.js","components/MapChart.js","components/Details.js","components/Stats.js","index.js"],"names":["SVG","style","fill","width","className","viewBox","height","xmlns","xmlnsXlink","id","refX","refY","markerWidth","markerHeight","orient","d","transform","x","y","points","stroke","strokeWidth","markerStart","markerEnd","fontSize","textAnchor","fontWeight","MapChart","setTooltipContent","dataset","setCountry","country","data","setData","useEffect","console","log","csv","process","then","maxFunding","Math","max","map","forEach","investment","data-tip","projectionConfig","rotate","scale","disablePanning","length","geography","geographies","geo","corruption","find","s","properties","ISO_A3","key","rsmKey","rgbHex","onClick","onMouseEnter","NAME","onMouseLeave","default","outline","hover","pressed","coordinates","Legend2d","name","mostCorrupted","sort","c1","c2","slice","mostInvested","lessInvested","upperFirst","string","charAt","toUpperCase","substring","rootElement","document","getElementById","ReactDOM","render","useState","content","setContent","setKey","Tabs","activeKey","onSelect","k","sector","Tab","eventKey","title","Stats","Details"],"mappings":"mRA0NeA,EAxNH,SAAC,GAAD,QACVC,aADU,MACF,GADE,OAEVC,KAFU,EAGVC,cAHU,MAGF,OAHE,MAIVC,iBAJU,MAIE,GAJF,MAKVC,eALU,MAKA,WALA,SAQV,yBACEF,MAAOA,EACPF,MAAOA,EACPK,OAAQH,EACRE,QAASA,EACTE,MAAM,6BACNH,UAAS,mBAAcA,GAAa,IACpCI,WAAW,gCAEX,8BACE,4BACEC,GAAG,QACHP,KAAK,QACLG,QAAQ,YACRK,KAAK,IACLC,KAAK,IACLC,YAAY,IACZC,aAAa,IACbC,OAAO,sBAEP,0BAAMC,EAAE,4BAGZ,uBAAGN,GAAG,QAAQO,UAAU,oBACtB,0BAAMb,MAAM,OAAOG,OAAO,OAAOJ,KAAK,iBAAiBe,EAAE,IAAIC,EAAE,MAC/D,0BACEf,MAAM,OACNG,OAAO,OACPJ,KAAK,oBACLe,EAAE,IACFC,EAAE,MAEJ,0BACEf,MAAM,OACNG,OAAO,OACPJ,KAAK,mBACLe,EAAE,IACFC,EAAE,MAEJ,0BACEf,MAAM,OACNG,OAAO,OACPJ,KAAK,oBACLe,EAAE,IACFC,EAAE,MAEJ,0BAAMf,MAAM,OAAOG,OAAO,OAAOJ,KAAK,iBAAiBe,EAAE,IAAIC,EAAE,MAC/D,0BACEf,MAAM,OACNG,OAAO,OACPJ,KAAK,oBACLe,EAAE,IACFC,EAAE,MAEJ,0BACEf,MAAM,OACNG,OAAO,OACPJ,KAAK,uBACLe,EAAE,IACFC,EAAE,MAEJ,0BACEf,MAAM,OACNG,OAAO,OACPJ,KAAK,sBACLe,EAAE,IACFC,EAAE,MAEJ,0BACEf,MAAM,OACNG,OAAO,OACPJ,KAAK,uBACLe,EAAE,IACFC,EAAE,MAEJ,0BACEf,MAAM,OACNG,OAAO,OACPJ,KAAK,oBACLe,EAAE,IACFC,EAAE,MAEJ,0BACEf,MAAM,OACNG,OAAO,OACPJ,KAAK,mBACLe,EAAE,IACFC,EAAE,MAEJ,0BACEf,MAAM,OACNG,OAAO,OACPJ,KAAK,sBACLe,EAAE,IACFC,EAAE,MAEJ,0BACEf,MAAM,OACNG,OAAO,OACPJ,KAAK,qBACLe,EAAE,IACFC,EAAE,MAEJ,0BACEf,MAAM,OACNG,OAAO,OACPJ,KAAK,sBACLe,EAAE,IACFC,EAAE,MAEJ,0BACEf,MAAM,OACNG,OAAO,OACPJ,KAAK,mBACLe,EAAE,IACFC,EAAE,MAEJ,0BACEf,MAAM,OACNG,OAAO,OACPJ,KAAK,oBACLe,EAAE,IACFC,EAAE,MAEJ,0BACEf,MAAM,OACNG,OAAO,OACPJ,KAAK,uBACLe,EAAE,IACFC,EAAE,MAEJ,0BACEf,MAAM,OACNG,OAAO,OACPJ,KAAK,sBACLe,EAAE,IACFC,EAAE,MAEJ,0BACEf,MAAM,OACNG,OAAO,OACPJ,KAAK,uBACLe,EAAE,IACFC,EAAE,MAEJ,0BACEf,MAAM,OACNG,OAAO,OACPJ,KAAK,oBACLe,EAAE,IACFC,EAAE,MAEJ,0BAAMf,MAAM,OAAOG,OAAO,OAAOJ,KAAK,iBAAiBe,EAAE,IAAIC,EAAE,MAC/D,0BACEf,MAAM,OACNG,OAAO,OACPJ,KAAK,oBACLe,EAAE,IACFC,EAAE,MAEJ,0BACEf,MAAM,OACNG,OAAO,OACPJ,KAAK,mBACLe,EAAE,IACFC,EAAE,MAEJ,0BACEf,MAAM,OACNG,OAAO,OACPJ,KAAK,oBACLe,EAAE,IACFC,EAAE,MAEJ,0BAAMf,MAAM,OAAOG,OAAO,OAAOJ,KAAK,iBAAiBe,EAAE,IAAIC,EAAE,MAC/D,8BACEC,OAAO,+BACPjB,KAAK,OACLkB,OAAO,QACPC,YAAY,MACZC,YAAY,cACZC,UAAU,gBAEZ,0BACEN,EAAE,MACFC,EAAE,IACFM,SAAS,SACTC,WAAW,SACXvB,KAAK,QACLwB,WAAW,QANb,cAUA,0BACEV,UAAU,kBACVd,KAAK,QACLe,EAAE,MACFC,EAAE,IACFM,SAAS,SACTC,WAAW,SACXC,WAAW,QAPb,iBC/FSC,EApFE,SAAC,GAOX,IANLC,EAMI,EANJA,kBACAC,EAKI,EALJA,QAEAC,GAGI,EAJJC,QAII,EAHJD,YACAE,EAEI,EAFJA,KACAC,EACI,EADJA,QAaA,OAXAC,qBAAU,WACRC,QAAQC,IAAIP,GACZQ,YAAI,GAAD,OAAIC,kBAAJ,iBAAmCT,IAAWU,MAAK,SAAAP,GACpD,IAAMQ,EAAaC,KAAKC,IAAL,MAAAD,KAAI,YAAQT,EAAKW,KAAI,SAAAZ,GAAO,OAAIA,EAAQ,qBAI3D,OAHAC,EAAKY,SAAQ,SAAAb,GACXA,EAAQc,WAAad,EAAQ,gBAAkBS,KAE1CP,EAAQD,QAEhB,CAACH,IAGF,yBAAKzB,UAAU,OACb,kBAAC,gBAAD,CACE0C,WAAS,GACTxC,OAAQ,IACRyC,iBAAkB,CAChBC,OAAQ,CAAC,EAAG,EAAG,GACfC,MAAO,MAGT,kBAAC,gBAAD,CAAeC,gBAAgB,GAC7B,kBAAC,SAAD,CAAQ9B,OAAO,UAAUC,YAAa,KACtC,kBAAC,YAAD,CAAWD,OAAO,UAAUC,YAAa,KACxCW,EAAKmB,OAAS,GACb,kBAAC,cAAD,CAAaC,UAzCvB,2GA0Ca,qBAAGC,YACUV,KAAI,SAAAW,GACd,IA1CIC,EAAYV,EA0CV9B,EAAIiB,EAAKwB,MAAK,SAAAC,GAAC,OAAIA,EAAC,cAAoBH,EAAII,WAAWC,UAC7D,OACE,kBAAC,YAAD,CACEC,IAAKN,EAAIO,OACTT,UAAWE,EACXpD,KACEa,GAhDFwC,EAiDmBxC,EAAE,oBAjDT8B,EAiD8B9B,EAAC,WAhD/DoB,QAAQC,IAAI,IAAM,IAAMmB,EAAY,EAAG,IAAM,IAAMV,GAE5C,IADKiB,IAAO,IAAM,IAAMP,EAAY,EAAG,IAAM,IAAMV,IAgDhC,UAENkB,QAAS,WACPjC,EAAWwB,EAAII,WAAWC,QAC1BxB,QAAQC,IAAIkB,EAAII,WAAWC,SAE7BK,aAAc,WACZpC,EAAkB0B,EAAII,WAAWO,OAEnCC,aAAc,WACZtC,EAAkB,KAEpB3B,MAAO,CACLkE,QAAS,CACPC,QAAS,QAEXC,MAAO,CACLnE,KAAM,OACNkE,QAAS,QAEXE,QAAS,CACPpE,KAAM,OACNkE,QAAS,iBASzB,kBAAC,SAAD,CAAQG,YAAa,EAAE,SAAU,UAC/B,kBAACC,EAAD,CAAUrE,MAAO,WClGd,cAAkB,IAAf4B,EAAc,EAAdA,QAKhB,OAJAG,qBAAU,WACRC,QAAQC,IAAIL,KACX,CAACA,IAGF,yBAAK3B,UAAU,mBACb,4BAAK2B,KCPI,cAAe,IAAZC,EAAW,EAAXA,KAEVyC,EAAO,eAEPC,EAAgB1C,EAAK2C,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAHzB,qBAG2CC,EAH3C,oBAG4D,GAAK,KAAGC,MAAM,EAAE,GACzFC,EAAe/C,EAAK2C,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAG/B,YAAcgC,EAAGhC,WAAa,GAAK,KAAGiC,MAAM,EAAE,GACtFE,EAAehD,EAAK2C,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAG/B,YAAcgC,EAAGhC,WAAa,GAAK,KAAGiC,MAAM,EAAE,GAE5F,OACE,yBAAK1E,UAAU,iBAAf,iBAEE,4BACCsE,EAAc/B,KAAI,SAAAZ,GAAO,OAAI,4BAAKA,EAAQ0C,QAH7C,gBAME,4BACCM,EAAapC,KAAI,SAAAZ,GAAO,OAAI,4BAAKA,EAAQ0C,QAP5C,iBAUE,4BACCO,EAAarC,KAAI,SAAAZ,GAAO,OAAI,4BAAKA,EAAQ0C,U,gBCZ1CQ,EAAa,SAAAC,GAAM,OACvBA,EAAOC,OAAO,GAAGC,cAAgBF,EAAOG,UAAU,IA2CpD,IAAMC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,mBA3ChB,WAAgB,IAAD,EACiBC,mBAAS,IAD1B,mBACNC,EADM,KACGC,EADH,OAESF,mBAAS,UAFlB,mBAEN/B,EAFM,KAEDkC,EAFC,OAGiBH,mBAAS,IAH1B,mBAGN5D,EAHM,KAGGD,EAHH,OAIW6D,mBAAS,IAJpB,mBAIN3D,EAJM,KAIAC,EAJA,KAQb,OACE,6BACE,yBAAK7B,UAAU,QACb,yBAAKA,UAAU,QACb,kBAAC2F,EAAA,EAAD,CACEtF,GAAG,yBACHuF,UAAWpC,EACXqC,SAAU,SAAAC,GAAC,OAAIJ,EAAOI,KARhB,CAAC,SAAU,YAAa,SAAU,YAU/BvD,KAAI,SAAAwD,GAAM,OACjB,kBAACC,EAAA,EAAD,CACExC,IAAKuC,EACLE,SAAUF,EACVG,MAAOrB,EAAWkB,UAK1B,kBAAC,EAAD,CACEvE,kBAAmBiE,EACnBhE,QAAS+B,EAAM,OACf7B,QAASA,EACTD,WAAYA,EACZE,KAAMA,EACNC,QAASA,IAEX,kBAACsE,EAAD,CAAOxE,QAASA,EAASC,KAAMA,IAC/B,kBAAC,IAAD,KAAe4D,GACf,kBAACY,EAAD,CAASzE,QAASA,QAOV,MAASuD,K","file":"static/js/main.b4e548c4.chunk.js","sourcesContent":["import React from \"react\";\n\nconst SVG = ({\n  style = {},\n  fill = \"#000\",\n  width = \"100%\",\n  className = \"\",\n  viewBox = \"0 0 10 6\"\n}) => (\n  // <div style={{ position: \"absolute\", top: \"60%\", left: \"0\" }}>\n  <svg\n    width={width}\n    style={style}\n    height={width}\n    viewBox={viewBox}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className={`svg-icon ${className || \"\"}`}\n    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n  >\n    <defs>\n      <marker\n        id=\"arrow\"\n        fill=\"white\"\n        viewBox=\"0 0 10 10\"\n        refX=\"5\"\n        refY=\"5\"\n        markerWidth=\"6\"\n        markerHeight=\"6\"\n        orient=\"auto-start-reverse\"\n      >\n        <path d=\"M 0 0 L 10 5 L 0 10 z\" />\n      </marker>\n    </defs>\n    <g id=\"group\" transform=\" rotate(-45 5 0)\">\n      <rect width=\"0.95\" height=\"0.95\" fill=\"rgb(100,0,255)\" x=\"0\" y=\"0\"></rect>\n      <rect\n        width=\"0.95\"\n        height=\"0.95\"\n        fill=\"rgb(100,0,216.25)\"\n        x=\"0\"\n        y=\"1\"\n      ></rect>\n      <rect\n        width=\"0.95\"\n        height=\"0.95\"\n        fill=\"rgb(100,0,177.5)\"\n        x=\"0\"\n        y=\"2\"\n      ></rect>\n      <rect\n        width=\"0.95\"\n        height=\"0.95\"\n        fill=\"rgb(100,0,138.75)\"\n        x=\"0\"\n        y=\"3\"\n      ></rect>\n      <rect width=\"0.95\" height=\"0.95\" fill=\"rgb(100,0,100)\" x=\"0\" y=\"4\"></rect>\n      <rect\n        width=\"0.95\"\n        height=\"0.95\"\n        fill=\"rgb(138.75,0,255)\"\n        x=\"1\"\n        y=\"0\"\n      ></rect>\n      <rect\n        width=\"0.95\"\n        height=\"0.95\"\n        fill=\"rgb(138.75,0,216.25)\"\n        x=\"1\"\n        y=\"1\"\n      ></rect>\n      <rect\n        width=\"0.95\"\n        height=\"0.95\"\n        fill=\"rgb(138.75,0,177.5)\"\n        x=\"1\"\n        y=\"2\"\n      ></rect>\n      <rect\n        width=\"0.95\"\n        height=\"0.95\"\n        fill=\"rgb(138.75,0,138.75)\"\n        x=\"1\"\n        y=\"3\"\n      ></rect>\n      <rect\n        width=\"0.95\"\n        height=\"0.95\"\n        fill=\"rgb(138.75,0,100)\"\n        x=\"1\"\n        y=\"4\"\n      ></rect>\n      <rect\n        width=\"0.95\"\n        height=\"0.95\"\n        fill=\"rgb(177.5,0,255)\"\n        x=\"2\"\n        y=\"0\"\n      ></rect>\n      <rect\n        width=\"0.95\"\n        height=\"0.95\"\n        fill=\"rgb(177.5,0,216.25)\"\n        x=\"2\"\n        y=\"1\"\n      ></rect>\n      <rect\n        width=\"0.95\"\n        height=\"0.95\"\n        fill=\"rgb(177.5,0,177.5)\"\n        x=\"2\"\n        y=\"2\"\n      ></rect>\n      <rect\n        width=\"0.95\"\n        height=\"0.95\"\n        fill=\"rgb(177.5,0,138.75)\"\n        x=\"2\"\n        y=\"3\"\n      ></rect>\n      <rect\n        width=\"0.95\"\n        height=\"0.95\"\n        fill=\"rgb(177.5,0,100)\"\n        x=\"2\"\n        y=\"4\"\n      ></rect>\n      <rect\n        width=\"0.95\"\n        height=\"0.95\"\n        fill=\"rgb(216.25,0,255)\"\n        x=\"3\"\n        y=\"0\"\n      ></rect>\n      <rect\n        width=\"0.95\"\n        height=\"0.95\"\n        fill=\"rgb(216.25,0,216.25)\"\n        x=\"3\"\n        y=\"1\"\n      ></rect>\n      <rect\n        width=\"0.95\"\n        height=\"0.95\"\n        fill=\"rgb(216.25,0,177.5)\"\n        x=\"3\"\n        y=\"2\"\n      ></rect>\n      <rect\n        width=\"0.95\"\n        height=\"0.95\"\n        fill=\"rgb(216.25,0,138.75)\"\n        x=\"3\"\n        y=\"3\"\n      ></rect>\n      <rect\n        width=\"0.95\"\n        height=\"0.95\"\n        fill=\"rgb(216.25,0,100)\"\n        x=\"3\"\n        y=\"4\"\n      ></rect>\n      <rect width=\"0.95\" height=\"0.95\" fill=\"rgb(255,0,255)\" x=\"4\" y=\"0\"></rect>\n      <rect\n        width=\"0.95\"\n        height=\"0.95\"\n        fill=\"rgb(255,0,216.25)\"\n        x=\"4\"\n        y=\"1\"\n      ></rect>\n      <rect\n        width=\"0.95\"\n        height=\"0.95\"\n        fill=\"rgb(255,0,177.5)\"\n        x=\"4\"\n        y=\"2\"\n      ></rect>\n      <rect\n        width=\"0.95\"\n        height=\"0.95\"\n        fill=\"rgb(255,0,138.75)\"\n        x=\"4\"\n        y=\"3\"\n      ></rect>\n      <rect width=\"0.95\" height=\"0.95\" fill=\"rgb(255,0,100)\" x=\"4\" y=\"4\"></rect>\n      <polyline\n        points=\"-0.2,-0.4, -0.2,5.1, 5.3,5.1\"\n        fill=\"none\"\n        stroke=\"white\"\n        strokeWidth=\"0.1\"\n        markerStart=\"url(#arrow)\"\n        markerEnd=\"url(#arrow)\"\n      />\n      <text\n        x=\"2.5\"\n        y=\"6\"\n        fontSize=\"0.06em\"\n        textAnchor=\"middle\"\n        fill=\"white\"\n        fontWeight=\"bold\"\n      >\n        Corruption\n      </text>\n      <text\n        transform=\" rotate(90 0 0)\"\n        fill=\"white\"\n        x=\"2.5\"\n        y=\"1\"\n        fontSize=\"0.06em\"\n        textAnchor=\"middle\"\n        fontWeight=\"bold\"\n      >\n        Investment\n      </text>\n    </g>\n  </svg>\n);\n\nexport default SVG;\n","import React, { useEffect, useState } from \"react\";\nimport { csv } from \"d3-fetch\";\n// import { scaleLinear } from \"d3-scale\";\nimport {\n  ZoomableGroup,\n  ComposableMap,\n  Geographies,\n  Geography,\n  Sphere,\n  Graticule,\n  Marker\n} from \"react-simple-maps\";\nimport rgbHex from \"rgb-hex\";\nimport Legend2d from \"./Legend2d\";\n\nconst geoUrl =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\nconst colorScale2D = (corruption, investment) => {\n  console.log(100 + 155 * corruption, 0, 100 + 155 * investment)\n  const hex = rgbHex(100 + 155 * corruption, 0, 100 + 155 * investment);\n  return \"#\" + hex;\n};\n\nconst MapChart = ({\n  setTooltipContent,\n  dataset,\n  country,\n  setCountry,\n  data,\n  setData\n}) => {\n  useEffect(() => {\n    console.log(dataset)\n    csv(`${process.env.PUBLIC_URL}/data/${dataset}`).then(data => {\n      const maxFunding = Math.max(...data.map(country => country['Funding USDm']))\n      data.forEach(country => {\n        country.investment = country['Funding USDm'] / maxFunding\n      })\n      return setData(data);\n    });\n  }, [dataset]);\n\n  return (\n    <div className=\"Map\">\n      <ComposableMap\n        data-tip=\"\"\n        height={450}\n        projectionConfig={{\n          rotate: [0, 0, 0],\n          scale: 140\n        }}\n      >\n        <ZoomableGroup disablePanning={true}>\n          <Sphere stroke=\"#E4E5E6\" strokeWidth={0.3} />\n          <Graticule stroke=\"#E4E5E6\" strokeWidth={0.3} />\n          {data.length > 0 && (\n            <Geographies geography={geoUrl}>\n              {({ geographies }) =>\n                geographies.map(geo => {\n                  const d = data.find(s => s['CountryCode'] === geo.properties.ISO_A3);\n                  return (\n                    <Geography\n                      key={geo.rsmKey}\n                      geography={geo}\n                      fill={\n                        d\n                          ? colorScale2D(d[\"Corruption risks\"], d[\"investment\"])\n                          : \"#F5F4F6\"\n                      }\n                      onClick={() => {\n                        setCountry(geo.properties.ISO_A3);\n                        console.log(geo.properties.ISO_A3);\n                      }}\n                      onMouseEnter={() => {\n                        setTooltipContent(geo.properties.NAME);\n                      }}\n                      onMouseLeave={() => {\n                        setTooltipContent(\"\");\n                      }}\n                      style={{\n                        default: {\n                          outline: \"none\"\n                        },\n                        hover: {\n                          fill: \"#F53\",\n                          outline: \"none\"\n                        },\n                        pressed: {\n                          fill: \"#E42\",\n                          outline: \"none\"\n                        }\n                      }}\n                    />\n                  );\n                })\n              }\n            </Geographies>\n          )}\n          <Marker coordinates={[-150.006, -10.7128]}>\n            <Legend2d width={120} />\n          </Marker>\n        </ZoomableGroup>\n      </ComposableMap>\n    </div>\n  );\n};\n\nexport default MapChart;\n","import React, { useEffect } from \"react\";\n\nexport default ({ country }) => {\n  useEffect(() => {\n    console.log(country);\n  }, [country]);\n\n  return (\n    <div className=\"content Details\">\n      <h3>{country}</h3>\n    </div>\n  );\n};\n","import React, { useEffect } from \"react\";\n\nexport default ({ data }) => {\n  const corruption = 'Corruption risks'\n  const name = 'Country Name'\n\n  const mostCorrupted = data.sort((c1, c2) => c1[corruption] <= c2[corruption] ? 1 : -1).slice(0,5)\n  const mostInvested = data.sort((c1, c2) => c1.investment <= c2.investment ? 1 : -1).slice(0,5)\n  const lessInvested = data.sort((c1, c2) => c1.investment >= c2.investment ? 1 : -1).slice(0,5)\n\n  return (\n    <div className=\"content Stats\">\n      most corrupted\n      <ul>\n      {mostCorrupted.map(country => <li>{country[name]}</li>)}\n      </ul>\n      most invested\n      <ul>\n      {mostInvested.map(country => <li>{country[name]}</li>)}\n      </ul>\n      least invested\n      <ul>\n      {lessInvested.map(country => <li>{country[name]}</li>)}\n      </ul>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ReactTooltip from \"react-tooltip\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./styles.css\";\nimport MapChart from \"./components/MapChart\";\nimport Details from \"./components/Details\";\nimport Stats from \"./components/Stats\";\n\nimport { Tabs, Tab } from \"react-bootstrap\";\nconst upperFirst = string =>\n  string.charAt(0).toUpperCase() + string.substring(1);\nfunction App() {\n  const [content, setContent] = useState(\"\");\n  const [key, setKey] = useState(\"public\");\n  const [country, setCountry] = useState(\"\");\n  const [data, setData] = useState([]);\n\n\n  const sectors = [\"public\", \"education\", \"health\", \"business\"];\n  return (\n    <div>\n      <div className=\"page\">\n        <div className=\"Tabs\">\n          <Tabs\n            id=\"controlled-tab-example\"\n            activeKey={key}\n            onSelect={k => setKey(k)}\n          >\n            {sectors.map(sector => (\n              <Tab\n                key={sector}\n                eventKey={sector}\n                title={upperFirst(sector)}\n              ></Tab>\n            ))}\n          </Tabs>\n        </div>\n        <MapChart\n          setTooltipContent={setContent}\n          dataset={key + \".csv\"}\n          country={country}\n          setCountry={setCountry}\n          data={data}\n          setData={setData}\n        />\n        <Stats country={country} data={data}></Stats>\n        <ReactTooltip>{content}</ReactTooltip>\n        <Details country={country} />\n      </div>\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}